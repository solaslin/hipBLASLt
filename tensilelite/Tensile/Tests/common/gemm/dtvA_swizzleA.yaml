TestParameters:
  marks: [skip-gfx900, skip-gfx906, skip-gfx908, skip-gfx90a, skip-gfx1010, skip-gfx1011, skip-gfx1012, skip-gfx1030, skip-gfx1100, skip-gfx1101, skip-gfx1102, skip-gfx1200, skip-gfx1201] # not supported by arch

GlobalParameters:
  NumElementsToValidate: -1
  MinimumRequiredVersion: 4.14.0
  PrintLevel: 1
  #PrintSolutionRejectionReason: True
  Device: 0
  CMakeBuildType: Release
  MergeFiles: False
  KernelTime: True
  MaxWorkspaceSize: 13421772800
  DataInitTypeA: 13
  DataInitTypeB: 13
  DataInitTypeAlpha: 1
  DataInitTypeBeta: 1
  BoundsCheck: 2
  #MaxFileName: 256

BenchmarkProblems:
  ########################################
  # HHS TN DTVA + SWIZZLED_A + BIAS + Activation
  ########################################
  -
    - # ProblemType
      OperationType: GEMM
      DataType: h
      DestDataType: h
      ComputeDataType: s
      HighPrecisionAccumulate: True
      TransposeA: 1
      TransposeB: 0
      SwizzleTensorA: True
      UseBeta: True
      Batched: True
      UseBias: 1
      Activation: True
      BiasDataTypeList: ['h']
    - # BenchmarkProblemSizeGroup - Standard - All problem
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
      ForkParameters:
        - MatrixInstruction:
          - [16, 16, 16, 1,  1,   1, 1,  4,1 ] # MT = 64x16
          - [16, 16, 16, 1,  1,   2, 1,  4,1 ] # MT = 128x16
          - [16, 16, 16, 1,  1,   4, 1,  4,1 ] # MT = 256x16
          - [16, 16, 16, 1,  1,   8, 1,  4,1 ] # MT = 512x16
          - [16, 16, 16, 1,  1,   5, 1,  2,1 ] # MT = 160x16

          - [16, 16, 16, 1,  1,   1, 8,  4,1 ] # MT = 64x128
          - [16, 16, 16, 1,  1,   1, 16, 4,1 ] # MT = 64x256
          - [16, 16, 16, 1,  1,   2, 8,  4,1 ] # MT = 128x128
          - [16, 16, 16, 1,  1,   2, 16, 4,1 ] # MT = 128x256
          - [16, 16, 16, 1,  1,   4, 8,  4,1 ] # MT = 256x128
          - [16, 16, 16, 1,  1,   4, 16, 4,1 ] # MT = 256x256
          - [16, 16, 16, 1,  1,   8, 8,  4,1 ] # MT = 512x128
          - [16, 16, 16, 1,  1,   8, 16, 4,1 ] # MT = 512x256
          - [16, 16, 16, 1,  1,   5, 8,  2,1 ] # MT = 160x128
        - AssertFree0ElementMultiple: [16]
        - AssertSummationElementMultiple: [32]
        - GlobalReadVectorWidthA: [8]
        - GlobalReadVectorWidthB: [-1]
        - PrefetchGlobalRead: [1,2]
        - PrefetchLocalRead: [1,2,4]
        - ClusterLocalRead: [1]
        - NumElementsPerBatchStore: [0]
        - DepthU: [32,64,128]
        - VectorWidthA: [1]
        - VectorWidthB: [-1]
        - LocalWritePerMfma: [-1]
        - StaggerU: [4]
        - StaggerUStride: [256]
        - StaggerUMapping: [0]
        - WorkGroupMappingXCC: [8]
        - ScheduleIterAlg: [3]
        - LdsBlockSizePerPadA: [-1]
        - LdsBlockSizePerPadB: [-1]
        - StorePriorityOpt: [0]
        - VectorStore: [-1]
        - StoreSyncOpt: [0]
        - LdsPadA: [-1]
        - LdsPadB: [-1]
        - 1LDSBuffer: [1]
        - GlobalSplitU: [1,3]
        - GlobalSplitUAlgorithm: ["MultipleBuffer", "MultipleBufferSingleKernel"]
        - LocalReadVectorWidth: [2,4,8]
        - DirectToVgprA: [1]
        - UseSgprForGRO: [0,1]
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          - Exact: [160,   256, 1, 224]
          - Exact: [160,   256, 1, 256]
          - Exact: [160,   256, 1, 288]

          # Enable the big sizes when GSU3 + MBSK is ready.
          # - Exact: [1600,  512, 1, 992]
          # - Exact: [1600,  512, 1, 1024]
          # - Exact: [1600,  512, 1, 1056]

          - Exact: [512,   256, 1, 224]
          - Exact: [512,   256, 1, 256]
          - Exact: [512,   256, 1, 288]
        - BiasTypeArgs: ['h']
        - ActivationArgs:
          - [Enum: none]
          - [Enum: relu]
